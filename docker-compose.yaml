version: '3.3'
services:
#  traefik:
#    image: traefik:v2.9
#    container_name: traefik
#    command:
#      - --api.insecure=true
#      - --providers.docker=true
#      - --providers.docker.exposedbydefault=false
#      - --entrypoints.web.address=:80
#    ports:
#      - "80:80"
#      - "8080:8080"
#    volumes:
#      - "/var/run/docker.sock:/var/run/docker.sock:ro"
#
  eureka:
    build:
      context: ./discovery-server
    container_name: eureka
    hostname: eureka-server
    ports:
      - "8761:8761"
    environment:
      SPRING_APPLICATION_JSON: '{
                "eureka.instance.hostname":"eureka-server",
                "eureka.client.register-with-eureka":false,
                "eureka.client.fetch-registry":false,
                "server.port":8761
              }'

  api-gateway:
    build:
      context: ./api-gateway
    depends_on:
      - eureka
    container_name: api-gateway
    hostname: api-gateway
    ports:
      - "8080:8080"
    environment:
      SPRING_APPLICATION_JSON: '{
                "spring.application.name": "api-gateway",
                "eureka.client.serviceUrl.defaultZone": "http://eureka-server:8761/eureka",
                "server.forward-headers-strategy": "framework",
                "logging.level": "INFO",
                "logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator": "INFO",
                "logging.level.org.springframework.cloud.gateway": "TRACE",
                "spring.cloud.gateway.routes[0].id": "customer-service",
                "spring.cloud.gateway.routes[0].uri": "lb://customer-service",
                "spring.cloud.gateway.routes[0].predicates[0]": "Path=/customer/api/**, /customer/swagger-ui/**, /customer/v3/**",                
                "spring.cloud.gateway.routes[1].id": "car-service",
                "spring.cloud.gateway.routes[1].uri": "lb://car-service",
                "spring.cloud.gateway.routes[1].predicates[0]": "Path=/car/api/**, /car/swagger-ui/**, /car/v3/**",                
                "spring.cloud.gateway.routes[2].id": "lease-service",
                "spring.cloud.gateway.routes[2].uri": "lb://lease-service",
                "spring.cloud.gateway.routes[2].predicates[0]": "Path=/lease/api/**, /lease/swagger-ui/**, /lease/v3/**"
              }'

  mysqldb:
    image: mysql:5.7
    restart: unless-stopped
    container_name: carlease-mysqldb
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
    ports:
      - "3306:3306"
    volumes:
      - db:/var/lib/mysql

  carlease-customer-service:
    build:
      context: ./customer-service
    depends_on:
      - mysqldb
      - eureka
    restart: always
    container_name: carlease-customer-service
#    hostname: 'customer-service'
#    ports:
#      - "8081:8080"
    environment:
      SPRING_APPLICATION_JSON: '{
            "spring.datasource.url"  : "jdbc:mysql://mysqldb:3306/$MYSQLDB_DATABASE?useSSL=false",
            "spring.application.name": "customer-service",
            "spring.datasource.username" : "$MYSQLDB_USER",
            "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD",
            "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL5InnoDBDialect",
            "spring.jpa.hibernate.ddl-auto" : "update",
            "server.servlet.context-path": "/customer",
            "server.port": 0,
            "server.forward-headers-strategy": "framework",
            "springdoc.api-docs.enabled" : true,
            "eureka.client.serviceUrl.defaultZone": "http://eureka-server:8761/eureka"
          }'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.carlease-customer-service.rule=Host(`localhost`) && PathPrefix(`/customer`)"
      - "traefik.http.services.carlease-customer-service.loadbalancer.server.port=8080"
      - "traefik.http.routers.carlease-customer-service.entrypoints=web"

  carlease-car-service:
    build:
      context: ./car-service/car-service-server
    depends_on:
      - mysqldb
      - eureka
    restart: always
    container_name: carlease-car-service
#    hostname: 'car-service'
#    ports:
#      - "8082:8080"
    environment:
      SPRING_APPLICATION_JSON: '{
              "spring.application.name": "car-service",
              "spring.datasource.url"  : "jdbc:mysql://mysqldb:3306/$MYSQLDB_DATABASE?useSSL=false",
              "spring.datasource.username" : "$MYSQLDB_USER",
              "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD",
              "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL5InnoDBDialect",
              "spring.jpa.hibernate.ddl-auto" : "update",
              "server.servlet.context-path": "/car",  
              "server.port": 0,
              "server.forward-headers-strategy": "framework",
              "springdoc.api-docs.enabled" : true,
              "spring.jpa.show-sql": true,
              "eureka.client.serviceUrl.defaultZone": "http://eureka-server:8761/eureka"
            }'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.carlease-car-service.rule=Host(`localhost`) && PathPrefix(`/car`)"
      - "traefik.http.services.carlease-car-service.loadbalancer.server.port=8080"
      - "traefik.http.routers.carlease-car-service.entrypoints=web"

  carlease-lease-service:
    build:
      context: ./lease-service
    depends_on:
      - carlease-car-service
      - mysqldb
      - eureka
    restart: always
    container_name: carlease-lease-service
#    hostname: 'lease-service'
#    ports:
#      - "8083:8080"
    environment:
      SPRING_APPLICATION_JSON: '{
                "spring.application.name": "lease-service",
                "server.servlet.context-path": "/lease",
                "server.port": 0,
                "server.forward-headers-strategy": "framework",
                "springdoc.api-docs.enabled" : true,
                "eureka.client.serviceUrl.defaultZone": "http://eureka-server:8761/eureka"
              }'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.carlease-lease-service.rule=Host(`localhost`) && PathPrefix(`/lease`)"
      - "traefik.http.services.carlease-lease-service.loadbalancer.server.port=8080"
      - "traefik.http.routers.carlease-lease-service.entrypoints=web"

volumes:
  db:
